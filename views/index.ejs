<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>

    <style>
        body {
            font-family: Arial; padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        input, button {
            margin: 10px 0; width: 300px; padding: 8px; color: crimson;
        }

        pre {
            background: #f4f4f4; padding: 10px; max-width: 600px;
        }
    </style>    

</head>
<body>
  <h1>RESTfull API</h1>

  <label>Name:</label>
  <input type="text" id="name" placeholder="Enter name" />

  <label>Email:</label>
  <input type="email" id="email" placeholder="Enter email" />

  <label>User ID (for Read/Update/Delete):</label>
  <input type="text" id="userId" placeholder="Enter user ID" />

  <button onclick="createUser()">Create User</button>
  <button onclick="getAllUsers()">Get All Users</button>
  <button onclick="getUserById()">Get User by ID</button>
  <button onclick="updateUser()">Update User by ID</button>
  <button onclick="deleteUser()">Delete User by ID</button>

  <h2>Response:</h2>
  <pre id="responseBox"></pre>

  <script>
    const url = 'http://localhost:5000/api/users';

    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const userIdInput = document.getElementById('userId');
    const responseBox = document.getElementById('responseBox');

    async function createUser() {
        try {
            const response = await fetch(`${url}/`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: nameInput.value.trim(),
                    email: emailInput.value.trim()
                })
            })

            if (!response.ok) {
                throw new Error(`Failed to create user: ${response.status} ${response.statusText}`);
            }

            const data = await response.json();
            responseBox.textContent = JSON.stringify(data, null, 2);

        } catch (err) {
            responseBox.textContent = `Error: ${err.message}`;
            console.error("Error creating user:", err);
        }
    }

    async function getAllUsers() {
        try {
            const response = await fetch(`${url}/`);

            if (!response.ok) {
                throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);
            }

            const data = await response.json();
            responseBox.textContent = JSON.stringify(data, null, 2);
        } catch (err) {
            responseBox.textContent = `Error: ${err.message}`;
            console.error("Error fetching users:", err);
        }
    }

    async function getUserById() {
        try {
            const id = userIdInput.value;
            const response = await fetch(`${url}/${id}`);

            if (!response.ok) {
                throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);
            }

            
            const data = await response.json();
            responseBox.textContent = JSON.stringify(data, null, 2);
        } catch (err) {
            responseBox.textContent = `Error: ${err.message}`;
            console.error("Error fetching users:", err);
        }
    }

    async function updateUser() {
        try {
            const id = userIdInput.value;
            const response = await fetch(`${url}/${id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: nameInput.value,
                    email: emailInput.value
                })
            });

            if (!response.ok) {
                throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);
            }

            const data = await response.json();
            responseBox.textContent = JSON.stringify(data, null, 2);
        } catch (err) {
            responseBox.textContent = `Error: ${err.message}`;
            console.error("Error fetching users:", err);
        }
    }

    async function deleteUser() {
        try {
            const id = userIdInput.value;
            const response = await fetch(`${url}/${id}`, {
                method: "DELETE",
            });

            if (!response.ok) {
                throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);
            }

            const data = await response.json();
            responseBox.textContent = JSON.stringify(data, null, 2);
        } catch (err) {
            responseBox.textContent = `Error: ${err.message}`;
            console.error("Error fetching users:", err);
        }
    }
  </script>
</body>
</html>